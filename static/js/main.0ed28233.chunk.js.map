{"version":3,"sources":["assets/noImage.jpg","Components/Header.js","Components/Section.js","Components/Loader.js","Components/Message.js","Components/Poster.js","Routes/Home/HomePresenter.js","api.js","Routes/Home/index.js","Routes/Home/HomeContainer.js","Routes/TV/TVPresenter.js","Routes/TV/index.js","Routes/TV/TVContainer.js","Routes/Search/SearchPresenter.js","Routes/Search/index.js","Routes/Search/SearchContainer.js","Routes/Detail/DetailPresenter.js","Routes/Detail/index.js","Routes/Detail/DetailContainer.js","Components/Router.js","Components/GlobalStyles.js","Components/App.js","index.js"],"names":["module","exports","Header","styled","header","List","ul","Item","li","props","current","SLink","Link","withRouter","pathname","location","to","Container","div","Title","span","Grid","Section","title","children","Text","color","Message","text","Image","bgUrl","Rating","ImageContainer","Year","Poster","id","imageUrl","rating","year","isMovie","require","role","aria-label","length","substring","HomePresenter","nowPlaying","upcoming","popular","error","loading","Helmet","Loader","map","movie","key","poster_path","original_title","vote_average","release_date","api","axios","create","baseURL","params","api_key","language","moviesApi","get","append_to_response","term","query","encodeURIComponent","tvApi","HomeContainer","state","data","results","this","setState","React","Component","TVPresenter","topRated","airingToday","show","original_name","first_air_date","TVContainer","Form","form","Input","input","SearchPresenter","movieResults","tvResults","searchTerm","handleSubmit","updateTerm","onSubmit","placeholder","value","onChange","SearchContainer","event","preventDefault","searchByTerm","target","a","Backdrop","bgImage","Content","Cover","Data","ItemContainer","Divider","Overview","p","DetailPresenter","result","backdrop_path","runtime","episode_run_time","genres","genre","idx","name","overview","DetailContainer","includes","match","push","history","parsedId","parseInt","isNaN","console","log","path","exact","component","Home","TV","Search","Detail","from","globalStyles","createGlobalStyle","reset","App","Router","GlobalStyles","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.0ed28233.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/noImage.e8779cd0.jpg\";","import React from \"react\";\nimport { Link, withRouter } from \"react-router-dom\";\nimport styled from \"styled-components\";\n\nconst Header = styled.header`\n  position: fixed;\n  top: 0;\n  left: 0;\n  right: 0;\n  background-color: rgba(252, 252, 252, 0.1);\n  box-shadow: 0px 1px 5px 2px rgba(0, 0, 0, 0.8);\n`;\n\nconst List = styled.ul`\n  display: flex;\n  list-style: none;\n  margin: 0;\n  padding: 0;\n`;\n\nconst Item = styled.li`\n  padding: 10px 15px;\n  border-bottom: 3px solid\n    ${(props) =>\n      props.current ? \"yellowgreen\" : \"transparent\"};\n`;\n\nconst SLink = styled(Link)`\n  text-decoration: none;\n  color: inherit;\n`;\n\nexport default withRouter(({ location: { pathname } }) => (\n  <Header>\n    <List>\n      <Item current={pathname === \"/\"}>\n        <SLink to=\"/\">Home</SLink>\n      </Item>\n      <Item current={pathname === \"/tv\"}>\n        <SLink to=\"/tv\">TV</SLink>\n      </Item>\n      <Item current={pathname === \"/search\"}>\n        <SLink to=\"/search\">Search</SLink>\n      </Item>\n    </List>\n  </Header>\n));\n","import React from \"react\";\nimport PropTypes from \"prop-types\";\nimport styled from \"styled-components\";\n\nconst Container = styled.div`\n  :not(:last-child) {\n    margin-bottom: 20px;\n  }\n`;\n\nconst Title = styled.span`\n  font-size: 18px;\n  font-weight: 600;\n`;\n\nconst Grid = styled.div`\n  margin-top: 15px;\n  display: grid;\n  grid-template-columns: repeat(auto-fill, 125px);\n  grid-gap: 25px;\n`;\n\nconst Section = ({ title, children }) => (\n  <Container>\n    <Title>{title}</Title>\n    <Grid>{children}</Grid>\n  </Container>\n);\n\nSection.propTypes = {\n  title: PropTypes.string.isRequired,\n  children: PropTypes.oneOfType([\n    PropTypes.arrayOf(PropTypes.node),\n    PropTypes.node,\n  ]),\n};\n\nexport default Section;\n","import React from \"react\";\nimport styled from \"styled-components\";\n\nconst Container = styled.div`\n  width: 100vw;\n  display: flex;\n  justify-content: center;\n  font-size: 30px;\n`;\n\nexport default () => <Container>Loading...</Container>;\n","import React from \"react\";\nimport PropTypes from \"prop-types\";\nimport styled from \"styled-components\";\n\nconst Container = styled.div`\n  width: 100vw;\n  display: flex;\n  justify-content: center;\n`;\n\nconst Text = styled.span`\n  color: ${(props) => props.color};\n  font-weight: 600;\n`;\n\nconst Message = ({ text, color }) => (\n  <Container>\n    <Text color={color}>{text}</Text>\n  </Container>\n);\n\nMessage.propTypes = {\n  text: PropTypes.string.isRequired,\n  color: PropTypes.string.isRequired,\n};\n\nexport default Message;\n","import React from \"react\";\nimport PropTypes from \"prop-types\";\nimport { Link } from \"react-router-dom\";\nimport styled from \"styled-components\";\n\nconst Container = styled.div`\n  font-size: 12px;\n`;\n\nconst Image = styled.div`\n  background-image: url(${(props) => props.bgUrl});\n  height: 180px;\n  background-size: contain;\n  background-repeat: no-repeat;\n  border-radius: 3px;\n  background-position: center center;\n  transition: opacity 0.1s linear;\n`;\n\nconst Rating = styled.span`\n  position: absolute;\n  bottom: 5px;\n  right: 5px;\n  opacity: 0;\n  transition: opacity 0.15s linear;\n`;\n\nconst ImageContainer = styled.div`\n  position: relative;\n  margin-bottom: 5px;\n  &:hover {\n    ${Image} {\n      opacity: 0.3;\n    }\n    ${Rating} {\n      opacity: 1;\n    }\n  }\n`;\n\nconst Title = styled.span`\n  display: block;\n  margin-bottom: 3px;\n`;\n\nconst Year = styled.span`\n  font-size: 10px;\n  color: rgba(255, 255, 255, 0.5);\n`;\n\nconst Poster = ({\n  id,\n  imageUrl,\n  title,\n  rating,\n  year,\n  isMovie = false,\n}) => (\n  <Link to={isMovie ? `/movie/${id}` : `/show/${id}`}>\n    <Container>\n      <ImageContainer>\n        <Image\n          bgUrl={\n            imageUrl\n              ? `https://image.tmdb.org/t/p/w300${imageUrl}`\n              : require(\"../assets/noImage.jpg\")\n          }\n        />\n        <Rating>\n          <span role=\"img\" aria-label=\"rating\">\n            ⭐️\n          </span>\n          {rating}/10\n        </Rating>\n      </ImageContainer>\n      <Title>\n        {title.length > 16\n          ? `${title.substring(0, 16)}...`\n          : title}\n      </Title>\n      <Year>{year}</Year>\n    </Container>\n  </Link>\n);\n\nPoster.propTypes = {\n  id: PropTypes.number.isRequired,\n  imageUrl: PropTypes.string,\n  title: PropTypes.string.isRequired,\n  rating: PropTypes.number,\n  year: PropTypes.string,\n  isMovie: PropTypes.bool,\n};\n\nexport default Poster;\n","import React from \"react\";\nimport PropTypes from \"prop-types\";\nimport styled from \"styled-components\";\nimport Section from \"Components/Section\";\nimport Loader from \"Components/Loader\";\nimport Message from \"Components/Message\";\nimport Poster from \"Components/Poster\";\nimport { Helmet } from \"react-helmet\";\n\nconst Container = styled.div`\n  padding: 0px 10px;\n`;\n\nconst HomePresenter = ({\n  nowPlaying,\n  upcoming,\n  popular,\n  error,\n  loading,\n}) => (\n  <>\n    <Helmet>\n      <title>Moies | Nomflix</title>\n    </Helmet>\n    {loading ? (\n      <Loader />\n    ) : (\n      <Container>\n        {nowPlaying && nowPlaying.length > 0 && (\n          <Section title=\"Now Playing\">\n            {nowPlaying.map((movie) => (\n              <Poster\n                key={movie.id}\n                id={movie.id}\n                imageUrl={movie.poster_path}\n                title={movie.original_title}\n                rating={movie.vote_average}\n                year={\n                  movie.release_date &&\n                  movie.release_date.substring(0, 4)\n                }\n                isMovie={true}\n              />\n            ))}\n          </Section>\n        )}\n        {upcoming && upcoming.length > 0 && (\n          <Section title=\"Upcoming Movies\">\n            {upcoming.map((movie) => (\n              <Poster\n                key={movie.id}\n                id={movie.id}\n                imageUrl={movie.poster_path}\n                title={movie.original_title}\n                rating={movie.vote_average}\n                year={\n                  movie.release_date &&\n                  movie.release_date.substring(0, 4)\n                }\n                isMovie={true}\n              />\n            ))}\n          </Section>\n        )}\n        {popular && popular.length > 0 && (\n          <Section title=\"Popular Movies\">\n            {popular.map((movie) => (\n              <Poster\n                key={movie.id}\n                id={movie.id}\n                imageUrl={movie.poster_path}\n                title={movie.original_title}\n                rating={movie.vote_average}\n                year={\n                  movie.release_date &&\n                  movie.release_date.substring(0, 4)\n                }\n                isMovie={true}\n              />\n            ))}\n          </Section>\n        )}\n        {error && <Message text={error} color=\"#e74c3c\" />}\n      </Container>\n    )}\n  </>\n);\n\nHomePresenter.propTypes = {\n  nowPlaying: PropTypes.array,\n  upcoming: PropTypes.array,\n  popular: PropTypes.array,\n  error: PropTypes.string,\n  loading: PropTypes.bool.isRequired,\n};\n\nexport default HomePresenter;\n","import axios from \"axios\";\n\nconst api = axios.create({\n  baseURL: \"https://api.themoviedb.org/3/\",\n  params: {\n    api_key: \"10923b261ba94d897ac6b81148314a3f\",\n    language: \"en-US\",\n  },\n});\n\nexport const moviesApi = {\n  nowPlaying: () => api.get(\"movie/now_playing\"),\n  upcoming: () => api.get(\"movie/upcoming\"),\n  topRated: () => api.get(\"movie/top_rated\"),\n  popular: () => api.get(\"movie/popular\"),\n  movieDetail: (id) =>\n    api.get(`movie/${id}`, {\n      params: {\n        append_to_response: \"videos\",\n      },\n    }),\n  search: (term) =>\n    api.get(\"search/movie\", {\n      params: {\n        query: encodeURIComponent(term),\n      },\n    }),\n};\n\nexport const tvApi = {\n  topRated: () => api.get(\"tv/top_rated\"),\n  popular: () => api.get(\"tv/popular\"),\n  airingToday: () => api.get(\"tv/airing_today\"),\n  tvDetail: (id) =>\n    api.get(`tv/${id}`, {\n      params: {\n        append_to_response: \"videos\",\n      },\n    }),\n  search: (term) =>\n    api.get(\"search/tv\", {\n      params: {\n        query: encodeURIComponent(term),\n      },\n    }),\n};\n","import HomeContainer from \"./HomeContainer\";\n\nexport default HomeContainer;\n","import React from \"react\";\nimport HomePresenter from \"./HomePresenter\";\nimport { moviesApi } from \"api\";\n\nexport default class extends React.Component {\n  state = {\n    nowPlaying: null,\n    upcoming: null,\n    popular: null,\n    error: null,\n    loading: true,\n  };\n\n  async componentDidMount() {\n    try {\n      const {\n        data: { results: nowPlaying },\n      } = await moviesApi.nowPlaying();\n      const {\n        data: { results: upcoming },\n      } = await moviesApi.upcoming();\n      const {\n        data: { results: popular },\n      } = await moviesApi.popular();\n      this.setState({ nowPlaying, upcoming, popular });\n    } catch {\n      this.setState({\n        error: \"Can't find movies information\",\n      });\n    } finally {\n      this.setState({\n        loading: false,\n      });\n    }\n  }\n\n  render() {\n    const {\n      nowPlaying,\n      upcoming,\n      popular,\n      error,\n      loading,\n    } = this.state;\n    // console.log(this.state);\n    return (\n      <HomePresenter\n        nowPlaying={nowPlaying}\n        upcoming={upcoming}\n        popular={popular}\n        error={error}\n        loading={loading}\n      />\n    );\n  }\n}\n","import React from \"react\";\nimport PropTypes from \"prop-types\";\nimport styled from \"styled-components\";\nimport Section from \"Components/Section\";\nimport Loader from \"Components/Loader\";\nimport Message from \"Components/Message\";\nimport Poster from \"Components/Poster\";\nimport { Helmet } from \"react-helmet\";\n\nconst Container = styled.div`\n  padding: 0px 10px;\n`;\n\nconst TVPresenter = ({\n  topRated,\n  popular,\n  airingToday,\n  error,\n  loading,\n}) => (\n  <>\n    <Helmet>\n      <title>TV Show | Nomflix</title>\n    </Helmet>\n    {loading ? (\n      <Loader />\n    ) : (\n      <Container>\n        {topRated && topRated.length > 0 && (\n          <Section title=\"Top Rated Shows\">\n            {topRated.map((show) => (\n              <Poster\n                key={show.id}\n                id={show.id}\n                imageUrl={show.poster_path}\n                title={show.original_name}\n                rating={show.vote_average}\n                year={\n                  show.first_air_date &&\n                  show.first_air_date.substring(0, 4)\n                }\n                isMovie={false}\n              />\n            ))}\n          </Section>\n        )}\n        {popular && popular.length > 0 && (\n          <Section title=\"Popular Shows\">\n            {popular.map((show) => (\n              <Poster\n                key={show.id}\n                id={show.id}\n                imageUrl={show.poster_path}\n                title={show.original_name}\n                rating={show.vote_average}\n                year={\n                  show.first_air_date &&\n                  show.first_air_date.substring(0, 4)\n                }\n                isMovie={false}\n              />\n            ))}\n          </Section>\n        )}\n        {airingToday && airingToday.length > 0 && (\n          <Section title=\"Airing Shows\">\n            {airingToday.map((show) => (\n              <Poster\n                key={show.id}\n                id={show.id}\n                imageUrl={show.poster_path}\n                title={show.original_name}\n                rating={show.vote_average}\n                year={\n                  show.first_air_date &&\n                  show.first_air_date.substring(0, 4)\n                }\n                isMovie={false}\n              />\n            ))}\n          </Section>\n        )}\n        {error && <Message text={error} color=\"#e74c3c\" />}\n      </Container>\n    )}\n  </>\n);\n\nTVPresenter.propTypes = {\n  topRated: PropTypes.array,\n  popular: PropTypes.array,\n  airingToday: PropTypes.array,\n  error: PropTypes.string,\n  loading: PropTypes.bool.isRequired,\n};\n\nexport default TVPresenter;\n","import TVContainer from \"./TVContainer\";\n\nexport default TVContainer;\n","import React from \"react\";\nimport TVPresenter from \"./TVPresenter\";\nimport { tvApi } from \"api\";\n\nexport default class extends React.Component {\n  state = {\n    topRated: null,\n    popular: null,\n    airingToday: null,\n    error: null,\n    loading: true,\n  };\n\n  async componentDidMount() {\n    try {\n      const {\n        data: { results: topRated },\n      } = await tvApi.topRated();\n      const {\n        data: { results: popular },\n      } = await tvApi.popular();\n      const {\n        data: { results: airingToday },\n      } = await tvApi.airingToday();\n      this.setState({\n        topRated,\n        popular,\n        airingToday,\n      });\n    } catch {\n      this.setState({\n        error: \"Can't find TV shows information\",\n      });\n    } finally {\n      this.setState({\n        loading: false,\n      });\n    }\n  }\n  render() {\n    const {\n      topRated,\n      popular,\n      airingToday,\n      error,\n      loading,\n    } = this.state;\n    return (\n      <TVPresenter\n        topRated={topRated}\n        popular={popular}\n        airingToday={airingToday}\n        error={error}\n        loading={loading}\n      />\n    );\n  }\n}\n","import React from \"react\";\nimport PropTypes from \"prop-types\";\nimport styled from \"styled-components\";\nimport Loader from \"Components/Loader\";\nimport Section from \"Components/Section\";\nimport Message from \"Components/Message\";\nimport Poster from \"Components/Poster\";\n\nconst Container = styled.div`\n  padding: 0px 10px;\n`;\n\nconst Form = styled.form`\n  margin-bottom: 50px;\n  width: 100%;\n`;\n\nconst Input = styled.input`\n  all: unset;\n  font-size: 20px;\n  width: 100%;\n`;\n\nconst SearchPresenter = ({\n  movieResults,\n  tvResults,\n  searchTerm,\n  error,\n  loading,\n  handleSubmit,\n  updateTerm,\n}) => (\n  <Container>\n    <Form onSubmit={handleSubmit}>\n      <Input\n        placeholder=\"Search Movies or TV Shows...\"\n        value={searchTerm}\n        onChange={updateTerm}\n      />\n    </Form>\n    {loading ? (\n      <Loader />\n    ) : (\n      <>\n        {movieResults && movieResults.length > 0 && (\n          <Section title=\"Movie Results\">\n            {movieResults.map((movie) => (\n              <Poster\n                key={movie.id}\n                id={movie.id}\n                imageUrl={movie.poster_path}\n                title={movie.original_title}\n                rating={movie.vote_average}\n                year={\n                  movie.release_date &&\n                  movie.release_date.substring(0, 4)\n                }\n                isMovie={true}\n              />\n            ))}\n          </Section>\n        )}\n        {tvResults && tvResults.length > 0 && (\n          <Section title=\"TV Show Results\">\n            {tvResults.map((show) => (\n              <Poster\n                key={show.id}\n                id={show.id}\n                imageUrl={show.poster_path}\n                title={show.original_name}\n                rating={show.vote_average}\n                year={\n                  show.first_air_date &&\n                  show.first_air_date.substring(0, 4)\n                }\n                isMovie={false}\n              />\n            ))}\n          </Section>\n        )}\n        {error && <Message text={error} color=\"#e74c3c\" />}\n        {tvResults &&\n          movieResults &&\n          tvResults.length === 0 &&\n          movieResults.length === 0 && (\n            <Message text=\"Nothing found\" color=\"#95a5a6\" />\n          )}\n      </>\n    )}\n  </Container>\n);\n\nSearchPresenter.propTypes = {\n  movieResults: PropTypes.array,\n  tvResults: PropTypes.array,\n  searchTerm: PropTypes.string,\n  error: PropTypes.string,\n  loading: PropTypes.bool.isRequired,\n  handleSubmit: PropTypes.func.isRequired,\n  updateTerm: PropTypes.func.isRequired,\n};\n\nexport default SearchPresenter;\n","import SearchContainer from \"./SearchContainer\";\n\nexport default SearchContainer;\n","import React from \"react\";\nimport SearchPresenter from \"./SearchPresenter\";\nimport { tvApi, moviesApi } from \"api\";\n\nexport default class extends React.Component {\n  state = {\n    movieResults: null,\n    tvResults: null,\n    searchTerm: \"\",\n    error: null,\n    loading: false,\n  };\n\n  handleSubmit = (event) => {\n    event.preventDefault();\n    const { searchTerm } = this.state;\n    if (searchTerm !== \"\") {\n      this.searchByTerm();\n    }\n  };\n\n  updateTerm = (event) => {\n    const {\n      target: { value },\n    } = event;\n    this.setState({\n      searchTerm: value,\n    });\n  };\n\n  searchByTerm = async () => {\n    const { searchTerm } = this.state;\n    try {\n      const {\n        data: { results: movieResults },\n      } = await moviesApi.search(searchTerm);\n      const {\n        data: { results: tvResults },\n      } = await tvApi.search(searchTerm);\n      this.setState({\n        movieResults,\n        tvResults,\n        loading: true,\n      });\n    } catch {\n      this.setState({ error: \"Can't find results\" });\n    } finally {\n      this.setState({ loading: false });\n    }\n  };\n\n  render() {\n    const {\n      movieResults,\n      tvResults,\n      searchTerm,\n      error,\n      loading,\n    } = this.state;\n    return (\n      <SearchPresenter\n        movieResults={movieResults}\n        tvResults={tvResults}\n        searchTerm={searchTerm}\n        error={error}\n        loading={loading}\n        handleSubmit={this.handleSubmit}\n        updateTerm={this.updateTerm}\n      />\n    );\n  }\n}\n","import React from \"react\";\nimport PropTypes from \"prop-types\";\nimport styled from \"styled-components\";\nimport Loader from \"Components/Loader\";\nimport { Helmet } from \"react-helmet\";\nimport Message from \"Components/Message\";\n\nconst Container = styled.div`\n  height: calc(100vh - 32px);\n  width: 100%;\n  position: relative;\n  padding: 50px;\n`;\n\nconst Backdrop = styled.div`\n  position: absolute;\n  top: 0;\n  left: 0;\n  height: 100%;\n  width: 100%;\n  background-image: url(${(props) => props.bgImage});\n  background-position: center center;\n  background-size: cover;\n  filter: blur(3px);\n  opacity: 0.5;\n`;\n\nconst Content = styled.div`\n  display: flex;\n  width: 100%;\n  height: 100%;\n  position: relative;\n`;\n\nconst Cover = styled.div`\n  width: 30%;\n  background-image: url(${(props) => props.bgImage});\n  background-position: center center;\n  background-size: cover;\n`;\n\nconst Data = styled.div`\n  width: 70%;\n  margin-left: 10px;\n`;\n\nconst Title = styled.span`\n  font-size: 32px;\n`;\n\nconst ItemContainer = styled.div`\n  margin: 20px 0;\n`;\n\nconst Item = styled.span``;\n\nconst Divider = styled.span`\n  margin: 0 10px;\n`;\n\nconst Overview = styled.p`\n  font-size: 12px;\n  opacity: 0.7;\n  line-height: 1.5;\n  width: 50%;\n`;\n\nconst DetailPresenter = ({ result, error, loading }) =>\n  loading ? (\n    <>\n      <Helmet>\n        <title>Loading | Nomflix</title>\n      </Helmet>\n      <Loader />\n    </>\n  ) : error ? (\n    <>\n      <Helmet>\n        <title>Not Found | Nomflix</title>\n      </Helmet>\n      <Message text=\"Nothing found\" color=\"#95a5a6\" />\n    </>\n  ) : (\n    <Container>\n      <Helmet>\n        <title>\n          {result.original_title\n            ? result.original_title\n            : result.original_name}{\" \"}\n          | Nomflix\n        </title>\n      </Helmet>\n      <Backdrop\n        bgImage={\n          result\n            ? `https://image.tmdb.org/t/p/original${result.backdrop_path}`\n            : \"\"\n        }\n      />\n      <Content>\n        <Cover\n          bgImage={\n            result\n              ? `https://image.tmdb.org/t/p/original${result.poster_path}`\n              : require(\"../../assets/noImage.jpg\")\n          }\n        ></Cover>\n        <Data>\n          <Title>\n            {result.original_title\n              ? result.original_title\n              : result.original_name}\n          </Title>\n          <ItemContainer>\n            <Item>\n              {result.release_date\n                ? result.release_date.substring(0, 4)\n                : result.first_air_date.substring(0, 4)}\n            </Item>\n            <Divider>∙</Divider>\n            <Item>\n              {result.runtime\n                ? result.runtime\n                : result.episode_run_time[0]}{\" \"}\n              min\n            </Item>\n            <Divider>∙</Divider>\n            {result.genres &&\n              result.genres.map((genre, idx) =>\n                idx === result.genres.length - 1\n                  ? genre.name\n                  : `${genre.name} / `\n              )}\n            <Overview>{result.overview}</Overview>\n          </ItemContainer>\n        </Data>\n      </Content>\n    </Container>\n  );\n\nDetailPresenter.propTypes = {\n  result: PropTypes.object,\n  error: PropTypes.string,\n  loading: PropTypes.bool.isRequired,\n};\n\nexport default DetailPresenter;\n","import DetailContainer from \"./DetailContainer\";\n\nexport default DetailContainer;\n","import React from \"react\";\nimport DetailPresenter from \"./DetailPresenter\";\nimport { moviesApi, tvApi } from \"api\";\n\nexport default class extends React.Component {\n  constructor(props) {\n    super(props);\n    const {\n      location: { pathname },\n    } = props;\n    this.state = {\n      result: null,\n      error: null,\n      loading: true,\n      isMovie: pathname.includes(\"movie\"),\n    };\n  }\n\n  async componentDidMount() {\n    const {\n      match: {\n        params: { id },\n      },\n      history: { push },\n    } = this.props;\n    const { isMovie } = this.state;\n    const parsedId = parseInt(id);\n    if (isNaN(parsedId)) {\n      return push(\"/\");\n    }\n    let result = null;\n    try {\n      console.log(isMovie);\n      if (isMovie) {\n        ({ data: result } = await moviesApi.movieDetail(\n          parsedId\n        ));\n      } else {\n        ({ data: result } = await tvApi.tvDetail(parsedId));\n      }\n      // console.log(result);\n    } catch {\n      this.setState({ error: \"Can't find anything.\" });\n    } finally {\n      this.setState({ loading: false, result });\n    }\n  }\n\n  render() {\n    const { result, error, loading } = this.state;\n    return (\n      <DetailPresenter\n        result={result}\n        error={error}\n        loading={loading}\n      />\n    );\n  }\n}\n","import React from \"react\";\nimport {\n  BrowserRouter as Router,\n  Route,\n  Redirect,\n  Switch,\n} from \"react-router-dom\";\nimport Header from \"Components/Header\";\nimport Home from \"Routes/Home\";\nimport TV from \"Routes/TV\";\nimport Search from \"Routes/Search\";\nimport Detail from \"Routes/Detail\";\n\nexport default () => (\n  <Router>\n    <Header />\n    <Switch>\n      <Route path=\"/\" exact={true} component={Home} />\n      <Route path=\"/tv\" component={TV} />\n      <Route path=\"/search\" component={Search} />\n      <Route path=\"/movie/:id\" component={Detail} />\n      <Route path=\"/show/:id\" component={Detail} />\n      <Redirect from=\"*\" to=\"/\" />\n    </Switch>\n  </Router>\n);\n","import { createGlobalStyle } from \"styled-components\";\nimport reset from \"styled-reset\";\n\nconst globalStyles = createGlobalStyle`\n    ${reset};\n    * {\n        box-sizing: border-box;\n    }\n    body {\n        font-family: -apple-system, BlinkMacSystemFont, 'Segoe UI', Roboto, Oxygen, Ubuntu, Cantarell, 'Open Sans', 'Helvetica Neue', sans-serif;\n        font-size: 14px;\n        background-color: rgba(20, 20, 20, 1);\n        color: white;\n        padding-top: 50px;\n    }\n    a{\n        text-decoration: none;\n        color: inherit;\n    }\n`;\n\nexport default globalStyles;\n","import React, { Component } from \"react\";\nimport Router from \"Components/Router\";\nimport GlobalStyles from \"Components/GlobalStyles\";\n\nclass App extends Component {\n  render() {\n    return (\n      <>\n        <Router />\n        <GlobalStyles />\n      </>\n    );\n  }\n}\n\nexport default App;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport App from \"Components/App\";\n\nReactDOM.render(<App />, document.getElementById(\"root\"));\n"],"sourceRoot":""}